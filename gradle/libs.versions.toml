[versions]
exposed = "0.51.1"
flyway = "10.15.0"
hikari = "5.1.0"
postgresql = "42.7.3"
koin = "3.5.6"
kotlin = "2.0.0"
ktor = "3.0.0-beta-1"
kotlin-coroutines = "1.9.0-RC"
kotlinx-serialization = "1.7.0"
mockk = "1.13.10"
logback = "1.5.4"
lettuce = "6.3.2.RELEASE"
lettucemod = "3.8.0"
truth = "1.4.2"

[libraries]
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
kotlin-test-unit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlin-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktor" }
ktor-server-double-receive = { module = "io.ktor:ktor-server-double-receive-jvm", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common-jvm", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger-jvm", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
lettuce-core = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }
lettucemod = { module = "com.redis:lettucemod", version.ref = "lettucemod" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }

[bundles]
exposed = [
    "exposed-core",
    "exposed-dao",
    "exposed-jdbc",
    "exposed-java-time",
    "exposed-json"
]
ktor = [
    "ktor-server-core",
    "ktor-server-content-negotiation",
    "ktor-serialization-kotlinx-json",
    "ktor-server-call-logging",
    "ktor-server-call-id",
    "ktor-server-double-receive",
    "ktor-server-resources",
    "ktor-server-host-common",
    "ktor-server-status-pages",
    "ktor-server-swagger",
    "ktor-server-default-headers",
    "ktor-server-netty",
    "ktor-server-config-yaml"
]
kotlinx-coroutines = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-reactive"
]

[plugins]
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
